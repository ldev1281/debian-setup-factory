#!/bin/bash

@module logger.bash

REQUIRED_TOOLS="docker git bws"

# === Check for required tools ===

missed_tools=()
for cmd in $REQUIRED_TOOLS; do
  if ! command -v "$cmd" >/dev/null 2>&1; then
    missed_tools+=("$cmd")
  fi
done

if ((${#missed_tools[@]})); then
  echo "Required tools not found:" >&2
  for cmd in "${missed_tools[@]}"; do
    echo "  - $cmd" >&2
  done
  echo "Hint: run dev-prod-init.recipe from debian-setup-factory" >&2
  echo "Abort"
  exit 127
fi

# Include other modules only after checking for required tools
@module bitwarden.bash

# We must reconfigure proxy-client every time this recipe is being run to prevent missed configuration
echo
echo "Running mandatory proxy-client configuration..."
echo
export PROXY_HOST="$(bitwarden::get_secret 'proxy-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'proxy-hostname'"
export PROXY_SOCKS5H_PORT="$(bitwarden::get_secret 'proxy-socks5h-port' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'proxy-socks5h-port'"
export PROXY_CLIENT_CADDY_AUTHENTIK_APP_HOSTNAME="$(bitwarden::get_secret 'app-authentik-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-authentik-hostname'"
export PROXY_CLIENT_CADDY_OUTLINE_APP_HOSTNAME="$(bitwarden::get_secret 'app-outline-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-outline-hostname'"
export PROXY_CLIENT_CADDY_FIREFLY_APP_HOSTNAME="$(bitwarden::get_secret 'app-firefly-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-firefly-hostname'"
export PROXY_CLIENT_CADDY_YOUTRACK_APP_HOSTNAME="$(bitwarden::get_secret 'app-youtrack-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-youtrack-hostname'"
export PROXY_FRP_PORT="$(bitwarden::get_secret 'proxy-frp-port' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'proxy-frp-port'"
export PROXY_FRP_TOKEN="$(bitwarden::get_secret 'proxy-frp-token' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'proxy-frp-token'"
@module proxy-client-setup.bash

INSTALL_APPS="${INSTALL_APPS:-authentik outline firefly youtrack}"

for install_app in $INSTALL_APPS; do
  echo
  echo "$install_app"
  read -r -p "Install $install_app? [Y/n]: " a
  a="${a:-y}"

  if [[ "${a,,}" =~ ^(y|yes)$ ]]; then
    case "$install_app" in
      authentik)
        export AUTHENTIK_APP_HOSTNAME="$(bitwarden::get_secret 'app-authentik-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-authentik-hostname'"
        export AUTHENTIK_EMAIL__USERNAME="$(bitwarden::get_secret 'app-authentik-email-username' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-authentik-email-username'"
        export AUTHENTIK_EMAIL__PASSWORD="$(bitwarden::get_secret 'app-authentik-email-password' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-authentik-email-password'"
        export AUTHENTIK_EMAIL__FROM="$(bitwarden::get_secret 'app-authentik-email-from' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-authentik-email-from'"
@module authentik-setup.bash
        # Post-install notice for Authentik
        echo
        echo "============================================================"
        echo "Authentik has been successfully installed."
        echo "Before proceeding with the installation of other applications, you must configure"
        echo "application authorization and single sign-on (SSO) in Authentik."
        echo
        echo "This includes:"
        echo "- Creating providers and applications in the Authentik admin panel."
        echo "- Setting up authentication flows (login, signup, etc.)."
        echo "- Generating client credentials (client ID/secret) for the apps you plan to integrate."
        echo
        echo "⚠️ Important: Do not continue with further application setups until Authentik is"
        echo "properly configured to handle authentication, otherwise logins will not work."
        echo
        echo "To start the initial setup, open in browser:"
        echo "  https://${AUTHENTIK_APP_HOSTNAME}/if/flow/initial-setup/"
        echo
        echo "Once the setup is completed, the authentik will be available at:"
        echo "  https://${AUTHENTIK_APP_HOSTNAME}"
        echo "============================================================"
        echo
        ;;
      outline)
        export OUTLINE_APP_HOSTNAME="$(bitwarden::get_secret 'app-outline-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-outline-hostname'"
        export OUTLINE_AUTHENTIK_CLIENT_ID="$(bitwarden::get_secret 'app-outline-authentik-client-id' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-outline-authentik-client-id'"
        export OUTLINE_AUTHENTIK_CLIENT_SECRET="$(bitwarden::get_secret 'app-outline-authentik-client-secret' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-outline-authentik-client-secret'"
        export OUTLINE_AUTHENTIK_URL="$(bitwarden::get_secret 'app-outline-authentik-url' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-outline-authentik-url'"
@module outline-setup.bash
        echo
        echo "============================================================"
        echo "Once the setup is completed, the Outline will be available at:"
        echo "  https://${OUTLINE_APP_HOSTNAME}"
        echo "============================================================"
        echo
        ;;
      firefly)
        export FIREFLY_APP_HOSTNAME="$(bitwarden::get_secret 'app-firefly-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-firefly-hostname'"
@module firefly-setup.bash
        echo
        echo "============================================================"
        echo "Once the setup is completed, the Firefly will be available at:"
        echo "  https://${FIREFLY_APP_HOSTNAME}"
        echo "============================================================"
        echo
        ;;
      youtrack)
        export YOUTRACK_APP_HOSTNAME="$(bitwarden::get_secret 'app-youtrack-hostname' "$BWS_PROJECT_ID")" || logger::err "Can't find secret 'app-youtrack-hostname'"
@module youtrack-setup.bash
        echo
        echo "============================================================"
        echo "Once the setup is completed, YouTrack will be available at:"
        echo "  https://${YOUTRACK_APP_HOSTNAME}"
        echo "============================================================"
        echo
        ;;
      *)
        echo "Unknown app '$install_app' — skipped"
        ;;
    esac
    echo "$install_app: Done"
  else
    echo "$install_app: Skipped"
  fi
done

echo
echo "Server successfully configured"
